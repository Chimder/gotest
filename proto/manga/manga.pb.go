// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: manga/manga.proto

package manga

import (
	chapter "github.com/chimas/GoProject/proto/chapter"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MangaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MangaRequest) Reset() {
	*x = MangaRequest{}
	mi := &file_manga_manga_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MangaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MangaRequest) ProtoMessage() {}

func (x *MangaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manga_manga_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MangaRequest.ProtoReflect.Descriptor instead.
func (*MangaRequest) Descriptor() ([]byte, []int) {
	return file_manga_manga_proto_rawDescGZIP(), []int{0}
}

func (x *MangaRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MangaResponseWithChapters struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Manga         *MangaResponse              `protobuf:"bytes,1,opt,name=manga,proto3" json:"manga,omitempty"`
	Chapters      []*chapter.ChaptersResponse `protobuf:"bytes,2,rep,name=chapters,proto3" json:"chapters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MangaResponseWithChapters) Reset() {
	*x = MangaResponseWithChapters{}
	mi := &file_manga_manga_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MangaResponseWithChapters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MangaResponseWithChapters) ProtoMessage() {}

func (x *MangaResponseWithChapters) ProtoReflect() protoreflect.Message {
	mi := &file_manga_manga_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MangaResponseWithChapters.ProtoReflect.Descriptor instead.
func (*MangaResponseWithChapters) Descriptor() ([]byte, []int) {
	return file_manga_manga_proto_rawDescGZIP(), []int{1}
}

func (x *MangaResponseWithChapters) GetManga() *MangaResponse {
	if x != nil {
		return x.Manga
	}
	return nil
}

func (x *MangaResponseWithChapters) GetChapters() []*chapter.ChaptersResponse {
	if x != nil {
		return x.Chapters
	}
	return nil
}

type MangaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Img           string                 `protobuf:"bytes,3,opt,name=img,proto3" json:"img,omitempty"`
	ImgHeader     string                 `protobuf:"bytes,4,opt,name=img_header,json=imgHeader,proto3" json:"img_header,omitempty"`
	Describe      string                 `protobuf:"bytes,5,opt,name=describe,proto3" json:"describe,omitempty"`
	Genres        []string               `protobuf:"bytes,6,rep,name=genres,proto3" json:"genres,omitempty"`
	Author        string                 `protobuf:"bytes,7,opt,name=author,proto3" json:"author,omitempty"`
	Country       string                 `protobuf:"bytes,8,opt,name=country,proto3" json:"country,omitempty"`
	Published     int32                  `protobuf:"varint,9,opt,name=published,proto3" json:"published,omitempty"`
	AverageRating float32                `protobuf:"fixed32,10,opt,name=average_rating,json=averageRating,proto3" json:"average_rating,omitempty"`
	RatingCount   int32                  `protobuf:"varint,11,opt,name=rating_count,json=ratingCount,proto3" json:"rating_count,omitempty"`
	Status        string                 `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	Popularity    int32                  `protobuf:"varint,13,opt,name=popularity,proto3" json:"popularity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MangaResponse) Reset() {
	*x = MangaResponse{}
	mi := &file_manga_manga_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MangaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MangaResponse) ProtoMessage() {}

func (x *MangaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manga_manga_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MangaResponse.ProtoReflect.Descriptor instead.
func (*MangaResponse) Descriptor() ([]byte, []int) {
	return file_manga_manga_proto_rawDescGZIP(), []int{2}
}

func (x *MangaResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MangaResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MangaResponse) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *MangaResponse) GetImgHeader() string {
	if x != nil {
		return x.ImgHeader
	}
	return ""
}

func (x *MangaResponse) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *MangaResponse) GetGenres() []string {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *MangaResponse) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *MangaResponse) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *MangaResponse) GetPublished() int32 {
	if x != nil {
		return x.Published
	}
	return 0
}

func (x *MangaResponse) GetAverageRating() float32 {
	if x != nil {
		return x.AverageRating
	}
	return 0
}

func (x *MangaResponse) GetRatingCount() int32 {
	if x != nil {
		return x.RatingCount
	}
	return 0
}

func (x *MangaResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *MangaResponse) GetPopularity() int32 {
	if x != nil {
		return x.Popularity
	}
	return 0
}

type MangaListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MangaLists    []*MangaResponse       `protobuf:"bytes,1,rep,name=manga_lists,json=mangaLists,proto3" json:"manga_lists,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MangaListResponse) Reset() {
	*x = MangaListResponse{}
	mi := &file_manga_manga_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MangaListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MangaListResponse) ProtoMessage() {}

func (x *MangaListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manga_manga_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MangaListResponse.ProtoReflect.Descriptor instead.
func (*MangaListResponse) Descriptor() ([]byte, []int) {
	return file_manga_manga_proto_rawDescGZIP(), []int{3}
}

func (x *MangaListResponse) GetMangaLists() []*MangaResponse {
	if x != nil {
		return x.MangaLists
	}
	return nil
}

type MangaFilterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Genres        []string               `protobuf:"bytes,2,rep,name=genres,proto3" json:"genres,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Country       string                 `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	OrderField    string                 `protobuf:"bytes,5,opt,name=order_field,json=orderField,proto3" json:"order_field,omitempty"`
	OrderSort     string                 `protobuf:"bytes,6,opt,name=order_sort,json=orderSort,proto3" json:"order_sort,omitempty"`
	Page          int32                  `protobuf:"varint,7,opt,name=page,proto3" json:"page,omitempty"`
	PerPage       int32                  `protobuf:"varint,8,opt,name=per_page,json=perPage,proto3" json:"per_page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MangaFilterRequest) Reset() {
	*x = MangaFilterRequest{}
	mi := &file_manga_manga_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MangaFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MangaFilterRequest) ProtoMessage() {}

func (x *MangaFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manga_manga_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MangaFilterRequest.ProtoReflect.Descriptor instead.
func (*MangaFilterRequest) Descriptor() ([]byte, []int) {
	return file_manga_manga_proto_rawDescGZIP(), []int{4}
}

func (x *MangaFilterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MangaFilterRequest) GetGenres() []string {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *MangaFilterRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *MangaFilterRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *MangaFilterRequest) GetOrderField() string {
	if x != nil {
		return x.OrderField
	}
	return ""
}

func (x *MangaFilterRequest) GetOrderSort() string {
	if x != nil {
		return x.OrderSort
	}
	return ""
}

func (x *MangaFilterRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *MangaFilterRequest) GetPerPage() int32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

var File_manga_manga_proto protoreflect.FileDescriptor

const file_manga_manga_proto_rawDesc = "" +
	"\n" +
	"\x11manga/manga.proto\x12\x05manga\x1a\x15chapter/chapter.proto\x1a\x1bgoogle/protobuf/empty.proto\"\"\n" +
	"\fMangaRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"~\n" +
	"\x19MangaResponseWithChapters\x12*\n" +
	"\x05manga\x18\x01 \x01(\v2\x14.manga.MangaResponseR\x05manga\x125\n" +
	"\bchapters\x18\x02 \x03(\v2\x19.chapter.ChaptersResponseR\bchapters\"\xea\x02\n" +
	"\rMangaResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x10\n" +
	"\x03img\x18\x03 \x01(\tR\x03img\x12\x1d\n" +
	"\n" +
	"img_header\x18\x04 \x01(\tR\timgHeader\x12\x1a\n" +
	"\bdescribe\x18\x05 \x01(\tR\bdescribe\x12\x16\n" +
	"\x06genres\x18\x06 \x03(\tR\x06genres\x12\x16\n" +
	"\x06author\x18\a \x01(\tR\x06author\x12\x18\n" +
	"\acountry\x18\b \x01(\tR\acountry\x12\x1c\n" +
	"\tpublished\x18\t \x01(\x05R\tpublished\x12%\n" +
	"\x0eaverage_rating\x18\n" +
	" \x01(\x02R\raverageRating\x12!\n" +
	"\frating_count\x18\v \x01(\x05R\vratingCount\x12\x16\n" +
	"\x06status\x18\f \x01(\tR\x06status\x12\x1e\n" +
	"\n" +
	"popularity\x18\r \x01(\x05R\n" +
	"popularity\"J\n" +
	"\x11MangaListResponse\x125\n" +
	"\vmanga_lists\x18\x01 \x03(\v2\x14.manga.MangaResponseR\n" +
	"mangaLists\"\xe1\x01\n" +
	"\x12MangaFilterRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06genres\x18\x02 \x03(\tR\x06genres\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x18\n" +
	"\acountry\x18\x04 \x01(\tR\acountry\x12\x1f\n" +
	"\vorder_field\x18\x05 \x01(\tR\n" +
	"orderField\x12\x1d\n" +
	"\n" +
	"order_sort\x18\x06 \x01(\tR\torderSort\x12\x12\n" +
	"\x04page\x18\a \x01(\x05R\x04page\x12\x19\n" +
	"\bper_page\x18\b \x01(\x05R\aperPage2\xa3\x02\n" +
	"\fMangaService\x12A\n" +
	"\bGetManga\x12\x13.manga.MangaRequest\x1a .manga.MangaResponseWithChapters\x12@\n" +
	"\fGetAllMangas\x12\x16.google.protobuf.Empty\x1a\x18.manga.MangaListResponse\x12D\n" +
	"\x10GetPopularMangas\x12\x16.google.protobuf.Empty\x1a\x18.manga.MangaListResponse\x12H\n" +
	"\x11GetFilteredMangas\x12\x19.manga.MangaFilterRequest\x1a\x18.manga.MangaListResponseB)Z'github.com/chimas/GoProject/proto/mangab\x06proto3"

var (
	file_manga_manga_proto_rawDescOnce sync.Once
	file_manga_manga_proto_rawDescData []byte
)

func file_manga_manga_proto_rawDescGZIP() []byte {
	file_manga_manga_proto_rawDescOnce.Do(func() {
		file_manga_manga_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_manga_manga_proto_rawDesc), len(file_manga_manga_proto_rawDesc)))
	})
	return file_manga_manga_proto_rawDescData
}

var file_manga_manga_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_manga_manga_proto_goTypes = []any{
	(*MangaRequest)(nil),              // 0: manga.MangaRequest
	(*MangaResponseWithChapters)(nil), // 1: manga.MangaResponseWithChapters
	(*MangaResponse)(nil),             // 2: manga.MangaResponse
	(*MangaListResponse)(nil),         // 3: manga.MangaListResponse
	(*MangaFilterRequest)(nil),        // 4: manga.MangaFilterRequest
	(*chapter.ChaptersResponse)(nil),  // 5: chapter.ChaptersResponse
	(*emptypb.Empty)(nil),             // 6: google.protobuf.Empty
}
var file_manga_manga_proto_depIdxs = []int32{
	2, // 0: manga.MangaResponseWithChapters.manga:type_name -> manga.MangaResponse
	5, // 1: manga.MangaResponseWithChapters.chapters:type_name -> chapter.ChaptersResponse
	2, // 2: manga.MangaListResponse.manga_lists:type_name -> manga.MangaResponse
	0, // 3: manga.MangaService.GetManga:input_type -> manga.MangaRequest
	6, // 4: manga.MangaService.GetAllMangas:input_type -> google.protobuf.Empty
	6, // 5: manga.MangaService.GetPopularMangas:input_type -> google.protobuf.Empty
	4, // 6: manga.MangaService.GetFilteredMangas:input_type -> manga.MangaFilterRequest
	1, // 7: manga.MangaService.GetManga:output_type -> manga.MangaResponseWithChapters
	3, // 8: manga.MangaService.GetAllMangas:output_type -> manga.MangaListResponse
	3, // 9: manga.MangaService.GetPopularMangas:output_type -> manga.MangaListResponse
	3, // 10: manga.MangaService.GetFilteredMangas:output_type -> manga.MangaListResponse
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_manga_manga_proto_init() }
func file_manga_manga_proto_init() {
	if File_manga_manga_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_manga_manga_proto_rawDesc), len(file_manga_manga_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_manga_manga_proto_goTypes,
		DependencyIndexes: file_manga_manga_proto_depIdxs,
		MessageInfos:      file_manga_manga_proto_msgTypes,
	}.Build()
	File_manga_manga_proto = out.File
	file_manga_manga_proto_goTypes = nil
	file_manga_manga_proto_depIdxs = nil
}
